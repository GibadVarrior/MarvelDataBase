{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/app.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","a","fetch","res","ok","Error","status","json","getAllCharacters","offset","data","results","map","_transformCharacter","getCharacter","id","char","name","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","this","clearInterval","timerId","errorMessage","spinner","content","onClick","mjolnir","Component","View","imgStyle","CharList","charList","newItemLoading","charEnded","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","length","arr","item","props","onCharSelected","renderItems","disabled","Skeleton","CharInfo","charId","prevProps","skeleton","lenght","i","ErrorBoundary","errorInfo","console","log","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e86ad468.chunk.js","sourcesContent":["import './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <a href=\"#\">\r\n                    <span>Marvel</span> information portal\r\n                </a>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><a href=\"#\">Characters</a></li>\r\n                    /\r\n                    <li><a href=\"#\">Comics</a></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"red\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"red\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"red\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"red\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"red\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"red\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"red\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"red\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;"," class MarvelService {\r\n\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=43ede71a4e9966471399c84c73c9b94d';\r\n    _baseOffset = 210;\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n    \r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`);\r\n        }\r\n    \r\n        return await res.json();\r\n    }\r\n\r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: char.description ? `${char.description.slice(0, 210)}...` : 'There is no description for this character',\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { Component } from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\n\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nclass RandomChar extends Component {\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n        // this.timerId = setInterval(this.updateChar, 15000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerId);\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char, \r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        this.onCharLoading();\r\n        this.marvelService\r\n            .getCharacter(id)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    render() {\r\n\r\n        const {char, loading, error} = this.state;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? <View char={char}/> : null;\r\n\r\n        return (\r\n            <div className=\"randomchar\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!<br/>\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">\r\n                        Or choose another one\r\n                    </p>\r\n                    <button onClick={this.updateChar} className=\"button button__main\">\r\n                        <div className=\"inner\">try it</div>\r\n                    </button>\r\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = char;\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'contain'};\r\n    }\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle}/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\n\r\n\r\nclass CharList extends Component {\r\n\r\n    state = {\r\n        charList: [],\r\n        loading: true,\r\n        error: false,\r\n        newItemLoading: false,\r\n        offset: 210,\r\n        charEnded: false\r\n    }\r\n    \r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.onRequest();\r\n    }\r\n\r\n    onRequest = (offset) => {\r\n        this.onCharListLoading();\r\n        this.marvelService.getAllCharacters(offset)\r\n            .then(this.onCharListLoaded)\r\n            .catch(this.onError)\r\n    }\r\n\r\n    onCharListLoading = () => {\r\n        this.setState({\r\n            newItemLoading: true\r\n        })\r\n    }\r\n\r\n    onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if (newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n        this.setState(({offset, charList}) => ({\r\n            charList: [...charList, ...newCharList],\r\n            loading: false,\r\n            newItemLoading: false,\r\n            offset: offset + 9,\r\n            charEnded: ended\r\n        }))\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            error: true,\r\n            loading: false\r\n        })\r\n    }\r\n\r\n\r\n    renderItems(arr) {\r\n        const items =  arr.map((item) => {\r\n            let imgStyle = {'objectFit' : 'cover'};\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit' : 'unset'};\r\n            }\r\n            \r\n            return (\r\n                <li \r\n                    className=\"char__item\"\r\n                    key={item.id}\r\n                    onClick={() => this.props.onCharSelected(item.id)}>\r\n                        <img src={item.thumbnail} alt={item.name} style={imgStyle}/>\r\n                        <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n        \r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n\r\n        const {charList, loading, error, offset, newItemLoading, charEnded} = this.state;\r\n        \r\n        const items = this.renderItems(charList);\r\n\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? items : null;\r\n\r\n        return (\r\n            <div className=\"char__list\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <button \r\n                    className=\"button button__main button__long\"\r\n                    disabled={newItemLoading}\r\n                    style={{'display': charEnded ? 'none' : 'block'}}\r\n                    onClick={() => this.onRequest(offset)}>\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func.isRequired\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport MarvelService from '../../services/MarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton';\r\nimport './charInfo.scss';\r\n\r\nclass CharInfo extends Component {\r\n\r\n    state = {\r\n        char: null,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.charId !== prevProps.charId) {\r\n            this.updateChar();\r\n        }\r\n    }\r\n\r\n\r\n    updateChar = () => {\r\n        const {charId} = this.props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        this.onCharLoading();\r\n\r\n        this.marvelService\r\n            .getCharacter(charId)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char, \r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n\r\n        const skeleton = char || loading || error ? null : <Skeleton/>;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error || !char) ? <View char={char}/> : null;\r\n\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n               {skeleton}\r\n               {errorMessage}\r\n               {spinner}\r\n               {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;\r\n\r\n    let imgStyle = {'objectFit' : 'cover'};\r\n    if (thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n        imgStyle = {'objectFit' : 'unset'};\r\n    }\r\n    return (\r\n        <>\r\n             <div className=\"char__basics\">\r\n                    <img src={thumbnail} alt={name} style={imgStyle}/>\r\n                    <div>\r\n                        <div className=\"char__info-name\">{name}</div>\r\n                        <div className=\"char__btns\">\r\n                            <a href={homepage} className=\"button button__main\">\r\n                                <div className=\"inner\">homepage</div>\r\n                            </a>\r\n                            <a href={wiki} className=\"button button__secondary\">\r\n                                <div className=\"inner\">Wiki</div>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"char__descr\">\r\n                    {description}\r\n                </div>\r\n                <div className=\"char__comics\">Comics:</div>\r\n                <ul className=\"char__comics-list\">\r\n                    {comics.lenght > 0 ? null : 'There is no comics with this character'}\r\n                   {\r\n                       comics.map((item,i) => {\r\n                           // eslint-disable-next-line \r\n                           if (i > 9) return;\r\n                           return (\r\n                            <li key={i} className=\"char__comics-item\">\r\n                                {item.name}\r\n                            </li>\r\n                           )\r\n                       })\r\n                   }\r\n                </ul>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        console.log(error, errorInfo)\r\n        this.setState({\r\n            error: true\r\n        })\r\n    } \r\n    \r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\n\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nclass App extends Component {\r\n\r\n    state = {\r\n        selectedChar: null\r\n    }\r\n\r\n    onCharSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                <main>\r\n                    <ErrorBoundary>\r\n                        <RandomChar/>\r\n                    </ErrorBoundary>\r\n                    <div className=\"char__content\">\r\n                        <ErrorBoundary>\r\n                            <CharList onCharSelected ={this.onCharSelected}/>\r\n                        </ErrorBoundary>\r\n                        <ErrorBoundary>\r\n                            <CharInfo charId={this.state.selectedChar}/>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/app';\n\nimport './style/style.scss';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}